<!DOCTYPE html>
<html lang="en">
<%- include('layouts/header'); -%>

    <body>
        <%- include('layouts/login-navbar-opaque'); -%>
            <!-- Analytics Container -->
            <div class="analytics-container">
                <center>
                    <!-- Title for Analytics -->
                    <h2 class="body-headers" style="padding-left: 20px;">Task Analytics</h2>
                </center>

                <!-- Display the count of new tasks -->
                <div class="analytics-item">
                    <h3>New Tasks (<span id="newTasksCount" class="purple-number">Loading...</span>)</h3>
                </div>

                <!-- Display the count of tasks in progress -->
                <div class="analytics-item">
                    <h3>In Progress Tasks (<span id="inProgressTasksCount" class="purple-number">Loading...</span>)</h3>
                </div>

                <!-- Display the count of rejected tasks -->
                <div class="analytics-item">
                    <h3>Rejected Tasks (<span id="rejectedTasksCount" class="purple-number">Loading...</span>)</h3>
                </div>

                <!-- Display the count of completed tasks -->
                <div class="analytics-item">
                    <h3>Completed Tasks (<span id="completedTasksCount" class="purple-number">Loading...</span>)</h3>
                </div>
            </div>

            <!-- Display the bar graph for task status -->
            <div class="analytics-item">
                <h3>Task Status</h3>
                <canvas id="taskStatusChart" style="width: 30%; height: 30%;"></canvas>
            </div>

            <!-- Spacing -->
            <div style="height: 100px;"> </div>

            <%- include('layouts/footer'); -%>

                <!-- Script to fetch analytics data and update the UI -->
                <script>
                    document.addEventListener("DOMContentLoaded", function () {
                        // Fetch and render analytics data when the page loads
                        fetchAndRenderAnalytics();
                    });

                    function fetchAndRenderAnalytics() {
                        // Fetch analytics data from the server
                        fetch("/fetch-analytics")
                            .then((response) => {
                                if (!response.ok) {
                                    throw new Error(`HTTP error! Status: ${response.status}`);
                                }
                                return response.json();
                            })
                            .then((data) => {
                                if (data.success) {
                                    // Update the UI with analytics data
                                    updateAnalyticsUI(data.counts);
                                    // Create a bar graph
                                    createBarGraph(data.counts);
                                } else {
                                    console.error("Error fetching analytics:", data.error);
                                    // Add error handling logic or display an error message
                                }
                            })
                            .catch((error) => {
                                console.error("Error fetching analytics:", error.message);
                                // Add error handling logic or display an error message
                            });
                    }

                    function updateAnalyticsUI(counts) {
                        // Update the UI with counts for each status
                        document.getElementById("newTasksCount").textContent = counts.new || 0;
                        document.getElementById("inProgressTasksCount").textContent = counts.inProgress || 0;
                        document.getElementById("rejectedTasksCount").textContent = counts.rejected || 0;
                        document.getElementById("completedTasksCount").textContent = counts.completed || 0;

                        // Create a bar graph after updating the UI
                        createBarGraph(counts);
                    }

                    function createBarGraph(counts) {
                        var ctx = document.getElementById("taskStatusChart").getContext("2d");

                        // Data for the bar graph
                        var chartData = {
                            labels: ["New", "In Progress", "Rejected", "Completed"],
                            datasets: [{
                                label: 'Task Status',
                                data: [counts.new, counts.inProgress, counts.rejected, counts.completed],
                                backgroundColor: [
                                    'rgba(149, 53, 255, 0.2)',
                                    'rgba(91, 113, 179, 0.2)',
                                    'rgba(30, 184, 229, 0.2)',
                                    'rgba(75, 192, 192, 0.2)',
                                ],
                                borderColor: [
                                    'rgba(149, 53, 255, 1)',
                                    'rgba(91, 113, 179, 1)',
                                    'rgba(30, 184, 229, 1)',
                                    'rgba(75, 192, 192, 1)',
                                ],
                                borderWidth: 1
                            }]
                        };

                        // Options for the bar graph
                        var chartOptions = {
                            scales: {
                                x: {
                                    stacked: true
                                },
                                y: {
                                    beginAtZero: true,
                                    precision: 0
                                }
                            },
                            plugins: {
                                legend: {
                                    display: false
                                }
                            }
                        };

                        // Create a new bar graph using Chart.js library
                        new Chart(ctx, {
                            type: 'bar',
                            data: chartData,
                            options: chartOptions
                        });
                    }
                </script>

    </body>

</html>